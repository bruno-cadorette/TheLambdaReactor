Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values) return _elm.Main.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Char = Elm.Char.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $Keyboard = Elm.Keyboard.make(_elm),
   $Keyboard$Keys = Elm.Keyboard.Keys.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $SocketIO = Elm.SocketIO.make(_elm),
   $String = Elm.String.make(_elm),
   $Task = Elm.Task.make(_elm),
   $Text = Elm.Text.make(_elm),
   $Time = Elm.Time.make(_elm),
   $Window = Elm.Window.make(_elm);
   var _op = {};
   var receiveMessageMailbox = $Signal.mailbox("null");
   var socket = A2($SocketIO.io,
   "http://localhost:8001",
   $SocketIO.defaultOptions);
   var outgoing = function (s) {
      return A2($Task.andThen,
      socket,
      A2($SocketIO.emit,"chatSend",s));
   };
   var incoming = A2($Task.andThen,
   socket,
   A2($SocketIO.on,"myEvent",receiveMessageMailbox.address));
   var everySecond = A2($Signal.map,
   $Basics.always($Maybe.Nothing),
   $Time.every($Time.second));
   var receiveMessage = function (str) {
      return A3($Signal.foldp,
      F2(function (x,xs) {
         var _p0 = x;
         if (_p0.ctor === "Just") {
               return A2($Basics._op["++"],xs,_U.list([_p0._0]));
            } else {
               return A2($List.drop,1,xs);
            }
      }),
      _U.list([]),
      A2($Signal.merge,A2($Signal.map,$Maybe.Just,str),everySecond));
   };
   var toText = $Signal.map(function (s) {
      return $Graphics$Collage.text($Text.fromString(s));
   });
   var stringBuilder = F2(function (key,str) {
      return _U.eq(key,
      $Keyboard$Keys.enter.keyCode) ? "" : _U.eq(key,
      $Keyboard$Keys.backspace.keyCode) ? A2($String.dropRight,
      1,
      str) : A2($String.append,
      str,
      $String.fromChar($Char.fromCode(key)));
   });
   var buildWord = A2($Signal.foldp,stringBuilder,"");
   var writtenText = toText(buildWord($Keyboard.presses));
   var canvas = A3($Signal.map2,
   F2(function (_p1,t) {
      var _p2 = _p1;
      return A3($Graphics$Collage.collage,_p2._0,_p2._1,_U.list([t]));
   }),
   $Window.dimensions,
   writtenText);
   var main = canvas;
   return _elm.Main.values = {_op: _op
                             ,buildWord: buildWord
                             ,stringBuilder: stringBuilder
                             ,toText: toText
                             ,writtenText: writtenText
                             ,everySecond: everySecond
                             ,receiveMessage: receiveMessage
                             ,canvas: canvas
                             ,socket: socket
                             ,outgoing: outgoing
                             ,receiveMessageMailbox: receiveMessageMailbox
                             ,incoming: incoming
                             ,main: main};
};