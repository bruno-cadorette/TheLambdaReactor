Elm.Bullet = Elm.Bullet || {};
Elm.Bullet.make = function (_elm) {
   "use strict";
   _elm.Bullet = _elm.Bullet || {};
   if (_elm.Bullet.values) return _elm.Bullet.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Color = Elm.Color.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),
   $List = Elm.List.make(_elm),
   $Math$Vector2 = Elm.Math.Vector2.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Mouse = Elm.Mouse.make(_elm),
   $Player = Elm.Player.make(_elm),
   $Point = Elm.Point.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Time = Elm.Time.make(_elm);
   var _op = {};
   var maybeCons = F2(function (event,xs) {
      var _p0 = event;
      if (_p0.ctor === "Just") {
            return A2($List._op["::"],_p0._0,xs);
         } else {
            return xs;
         }
   });
   var timeUpdate = A2($Signal.map,
   $Basics.always($Maybe.Nothing),
   $Time.fps(30));
   var shootEvent = function (player) {
      return A2($Signal.map,
      function (x) {
         return $Maybe.Just({position: x.position
                            ,orientation: x.orientation
                            ,speed: $Math$Vector2.fromRecord({x: 1,y: 2})});
      },
      A2($Signal.sampleOn,$Mouse.clicks,player));
   };
   var moveBullets = $List.map(function (b) {
      return _U.update(b,
      {position: A2($Math$Vector2.add,
      b.position,
      A2($Math$Vector2.direction,b.position,b.orientation))});
   });
   var bulletSignal = function (player) {
      return A3($Signal.foldp,
      F2(function (e,xs) {
         return moveBullets(A2(maybeCons,e,xs));
      }),
      _U.list([]),
      A2($Signal.merge,shootEvent(player),timeUpdate));
   };
   var bulletBody = A2($Graphics$Collage.filled,
   $Color.blue,
   $Graphics$Collage.circle(5.0));
   var displayBullet = F2(function (_p1,bullet) {
      var _p2 = _p1;
      return A2($Graphics$Collage.rotate,
      A2($Point.getOrientation,
      bullet.position,
      A3($Point.mapOrientation,_p2._0,_p2._1,bullet.orientation)),
      A2($Graphics$Collage.move,
      A2($Debug.watch,
      "position",
      $Math$Vector2.toTuple(bullet.position)),
      bulletBody));
   });
   var displayBullets = F2(function (_p3,bullets) {
      var _p4 = _p3;
      return A2($List.map,
      displayBullet({ctor: "_Tuple2",_0: _p4._0,_1: _p4._1}),
      bullets);
   });
   var Bullet = F3(function (a,b,c) {
      return {position: a,orientation: b,speed: c};
   });
   return _elm.Bullet.values = {_op: _op
                               ,bulletSignal: bulletSignal
                               ,displayBullets: displayBullets
                               ,Bullet: Bullet};
};